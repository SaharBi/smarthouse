{"version":3,"sources":["components/AddRoom.js","components/Room.js","components/Main.js","components/Product.js","components/Rooms.js","App.js","serviceWorker.js","index.js"],"names":["AddRoom","props","useState","name","setName","type","setType","color","setColor","room","productsList","greensArr","handleSubmit","length","alert","newRoom","className","id","Form","onSubmit","Group","dir","Label","Control","placeholder","onChange","e","value","target","as","to","pathname","onClick","Room","style","background","roomDet","Main","roomDetails","list","map","element","i","key","Product","handleRoom","state","bgColor","setState","j","this","onOff","Component","Rooms","isShow","setIsShow","product","setProduct","products","select","filter","push","c","App","setList","pname","plist","greeensArr","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c66e0fed.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction AddRoom(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('חדר שינה');\r\n    const [color, setColor] = useState('red');\r\n\r\n    const room = {\r\n        name: name,\r\n        type: type,\r\n        color: color,\r\n        productsList: [],\r\n        greensArr: []\r\n    }\r\n\r\n\r\n    function handleChange(e){\r\n        let value = e.target.value; // שיחליף את הסטייט\r\n        setName(value);\r\n        if(value.length > 5)\r\n        alert('שם החדר חייב להכיל עד 5 תווים בלבד');\r\n        \r\n    }\r\n\r\n    function handleS1Change(e){\r\n        let value = e.target.value;\r\n        setType(value);\r\n    }\r\n\r\n    function handleS2Change(e){\r\n        let value = e.target.value;\r\n        setColor(value);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        if(name.length<1){\r\n            alert('error');\r\n        } else {\r\n            props.newRoom(room)\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-4'>\r\n          </div>\r\n          <div id='box' className='col-4'>\r\n            <h1>Smart House</h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group dir='rtl'>\r\n                <Form.Label>בחר חדר חדש</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"שם החדר\" onChange={handleChange}/>\r\n                </Form.Group>\r\n                <Form.Label>בחר סוג חדר </Form.Label>\r\n                <Form.Group dir='rtl'>\r\n                    <Form.Control as=\"select\" id='select1' onChange={handleS1Change}>\r\n                        <option value=\"חדר שינה\">חדר שינה</option>\r\n                        <option value=\"אמבטיה/שירותים\">אמבטיה/שירותים</option>\r\n                        <option value=\"מטבח\">מטבח</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group dir='rtl'>\r\n                    <Form.Label>בחר צבע חדר</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={handleS2Change}>\r\n                        <option value=\"red\">אדום</option>\r\n                        <option value=\"blue\">כחול</option>\r\n                        <option value=\"green\">ירוק</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Link to={{ pathname: '/'}}>\r\n                <div onClick={handleSubmit}>\r\n                צור\r\n                </div>\r\n                </Link>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AddRoom;","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Room(props) {\r\n    function handleRoom(){\r\n        props.roomDet(props.name,props.type);\r\n      }\r\n    return (\r\n        <div id='rooms' style={{background: props.color}} onClick={handleRoom}>\r\n            {props.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Room from '../components/Room';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n  function roomDet(name,type){\r\n    props.roomDetails(name,type);\r\n  }\r\n    return (\r\n        <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-4'>\r\n          </div>\r\n          <div id='box' className='col-4'>\r\n            <h1>Smart House</h1>\r\n            {props.list.map((element,i)=>{\r\n          return  <Link to={{ pathname: `/rooms`}} key={i}> <Room productsList={element.productsList} name={element.name} color={element.color} \r\n          type={element.type} roomDet={roomDet} /> </Link>\r\n        })}\r\n            <Link to='/addroom'>\r\n            <button className='btn'>+</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\nclass Product extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            bgColor: false\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        for(let j=0;j<this.props.greensArr.length;j++){\r\n            if(this.props.greensArr[j] === this.props.i){\r\n                this.setState({bgColor: true})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleRoom = () => {     \r\n         if(this.state.bgColor === true){\r\n             this.setState({bgColor: false})\r\n         } else {\r\n             this.setState({bgColor: true})\r\n         }\r\n         }\r\n\r\n    render() {\r\n\r\n        var onOff = <div>\r\n        <div id='rooms' style={{background: 'red'}} onClick={this.handleRoom}>\r\n        {this.props.name}\r\n    </div>\r\n    </div>;\r\n    if(this.state.bgColor === true){\r\n    onOff = <div id='rooms' style={{background: 'green'}} onClick={this.handleRoom}>\r\n    {this.props.name}\r\n    </div>\r\n    } else {\r\n    onOff = <div id='rooms' style={{background: 'red'}} onClick={this.handleRoom}>\r\n        {this.props.name}\r\n    </div>\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {onOff}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;","import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport { Form } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Rooms(props) {\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [product,setProduct] = useState('מזגן');\r\n\r\n    var products = [];\r\n    var greensArr = [];\r\n\r\n    if(props.name){\r\n        for(let i=0;i<props.list.length;i++){\r\n            if(props.list[i].name === props.name){\r\n                products = props.list[i].productsList;\r\n                greensArr = props.list[i].greensArr;\r\n            }\r\n        }\r\n    }\r\n    \r\n    function handleChange(e){\r\n        let value = e.target.value;\r\n        setProduct(value);\r\n    }\r\n    function addToRoom(){\r\n        if(products.length >= 5) {\r\n            alert('Error');\r\n            setIsShow(false);\r\n            setProduct('מזגן');\r\n        } else if(product === \"מערכת סטיראו\"){\r\n            if(products.length !== 0){\r\n                const afterFilter = products.filter(function(i){\r\n                    return i === 'מערכת סטיראו';\r\n                })\r\n                if(afterFilter.length !== 0){\r\n                    alert('Error');\r\n                    setIsShow(false);\r\n                    setProduct('מזגן');\r\n                } else {\r\n                        products.push(product);\r\n                        setIsShow(false);\r\n                        setProduct('מזגן');\r\n                    }\r\n                \r\n            } else {\r\n                products.push(product);\r\n                    setIsShow(false);\r\n                    setProduct('מזגן');\r\n            }\r\n        } else if(product === \"דוד\"){\r\n            if(props.type === \"אמבטיה/שירותים\"){\r\n                products.push(product);\r\n                    setIsShow(false);\r\n                    setProduct('מזגן');\r\n            } else {\r\n                alert('Error');\r\n                setIsShow(false);\r\n                setProduct('מזגן');\r\n            }\r\n        } else {\r\n\r\n            products.push(product);\r\n                    setIsShow(false);\r\n                    setProduct('מזגן');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    var select = '';\r\n    if(isShow===true){\r\n        select = <div><Form>\r\n        <Form.Group dir='rtl'>\r\n            <Form.Control as=\"select\" id='select3' onChange={handleChange}>\r\n                <option value=\"מזגן\">מזגן</option>\r\n                <option value=\"דוד\">דוד</option>\r\n                <option value=\"מערכת סטיראו\">מערכת סטיראו</option>\r\n                <option value=\"מנורה\">מנורה</option>\r\n            </Form.Control>\r\n        </Form.Group>\r\n        </Form>\r\n        <button id='btn2' onClick={addToRoom}>הוסף</button>\r\n        </div>\r\n    } else {\r\n        select = ''\r\n    }\r\n    \r\n\r\n    function handleBack(){\r\n        props.productsList(props.name,products, greensArr)\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-4'>\r\n          <Link to='/'>\r\n            <button onClick={handleBack} className='btn'>חזור</button>\r\n            </Link>\r\n          </div>\r\n          <div id='box' className='col-4'>\r\n            <h1>Smart House</h1>\r\n            <p dir='rtl'>שם חדר: {props.name}</p>\r\n            <p dir='rtl'>סוג חדר: {props.type}</p>\r\n            {products.map((element,i)=>{\r\n          return  <div key ={i} onClick={()=>{\r\n            let c = 0;\r\n            for(let j=0;j<greensArr.length;j++){\r\n                if(greensArr[j]===i){\r\n                    c++;\r\n                    greensArr[j] = '';\r\n                }\r\n            } if(c === 0){\r\n                greensArr.push(i);\r\n            }\r\n          }}><Product i={i} name={element} greensArr={greensArr} /></div>\r\n        })}\r\n\r\n            <button className='btn' onClick={()=>setIsShow(!isShow)}>הוסף מוצר</button>\r\n            {select}\r\n          </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rooms;","import React, { useState } from 'react';\nimport {BrowserRouter as Router , Route , Switch} from 'react-router-dom';\nimport AddRoom from './components/AddRoom';\nimport Main from './components/Main';\nimport Rooms from './components/Rooms';\nimport './App.css';\n\n\n\nfunction App() {\n  const [list,setList] = useState([]);\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n\n\n function newRoom(room){\n    setList([...list,room]);\n  }\n  function roomDetails(name,type){\n    setName(name);\n    setType(type);\n  }\n\n  function productsList(pname,plist, greeensArr){\n    for(let i=0;i<list.length;i++){\n      if(list[i].name === pname){\n        list[i].productsList = plist;\n        list[i].greensArr = greeensArr;\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Router>\n         <Switch>\n            <Route exact path=\"/\" render={() => (<Main list={list} roomDetails={roomDetails} />)}/>\n            <Route path=\"/addroom\" render={() => (<AddRoom newRoom={newRoom} />)}/>\n            <Route path=\"/rooms\" render={() => (<Rooms productsList={productsList} name={name} type={type} list={list} />)}/>\n            </Switch> \n            </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}